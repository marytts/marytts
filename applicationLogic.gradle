apply plugin: 'application'

dependencies {
    runtimeOnly project(':marytts-runtime')
    runtimeOnly project(':marytts-languages').subprojects
    runtimeOnly project(':voice-cmu-slt-hsmm')
}

mainClassName = 'marytts.server.Mary'

run {
    dependsOn installDist
    systemProperties << ['mary.base': installDist.destinationDir]
    doFirst {
        classpath += fileTree(installDist.destinationDir).include('lib/voice-*.jar', 'lib/marytts-lang-*.jar')
    }
}

task runInstallerGui(type: JavaExec) {
    group 'Application'
    description 'Runs the MaryTTS Installer GUI as a JVM application'
    dependsOn installDist
    classpath run.classpath
    main 'marytts.tools.install.InstallerGUI'
    systemProperties << ['mary.base': installDist.destinationDir]
}

distributions {
    main {
        contents {
            from 'download', {
                into 'download'
            }
            from 'LICENSE.md'
        }
    }
}

distTar {
    compression Compression.BZIP2
}

startScripts {
    applicationName = 'marytts-server'
}

task installerGuiStartScripts(type: CreateStartScripts) {
    applicationName = 'marytts-component-installer'
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
    mainClassName = 'marytts.tools.install.InstallerGUI'
    startScripts.finalizedBy it
}

tasks.withType(CreateStartScripts) {
    group 'Distribution'
    description startScripts.description
    doLast {
        // hack mary.base property into DEFAULT_JVM_OPTS
        unixScript.text = unixScript.text.replaceAll('DEFAULT_JVM_OPTS=""', 'DEFAULT_JVM_OPTS="-Dmary.base=\\$APP_HOME"')
        windowsScript.text = windowsScript.text.replaceAll('set DEFAULT_JVM_OPTS=', 'set DEFAULT_JVM_OPTS="-Dmary.base=%APP_HOME%"')
        // hack classpath
        unixScript.text = unixScript.text.replaceAll('-classpath "\\\\"\\$CLASSPATH\\\\""', '-classpath "\\\\"\\$APP_HOME/lib/*\\\\""')
        windowsScript.text = windowsScript.text.replaceAll('-classpath "%CLASSPATH%"', '-classpath "%APP_HOME%\\\\lib\\\\*"')
    }
}

installDist {
    preserve {
        include 'download/*', 'installed/*', 'lib/**'
    }
}
