##########################################################################
# Copyright 2000-2009 DFKI GmbH.
# All Rights Reserved.  Use is subject to license terms.
#
# This file is part of MARY TTS.
#
# MARY TTS is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = en_NZ
en_NZ.version = 1.0.0

provides = a-language

requires = \
    marybase \
    en_NZ-voice

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

#modules.classes.list = \
#        marytts.modules.JPhonemiser(en_NZ.) \ 
#        marytts.modules.DummyAllophones2AcoustParams 

modules.classes.list = \
        marytts.modules.JPhonemiser(en_NZ.)  \
        marytts.language.en.JTokeniser \
        marytts.language.en.Prosody \
        marytts.language.en.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(en,en_NZ.pos) \

        marytts.modules.CARTF0Modeller(en_NZ,en_NZ.f0.,marytts.features.FeatureProcessorManager(en_NZ)) \
        marytts.modules.CARTDurationModeller(en_NZ,en_NZ.duration.,marytts.features.FeatureProcessorManager(en_NZ)) \
    
        marytts.modules.PolynomialF0Modeller(en,english.f0.,marytts.language.en.features.FeatureProcessorManager) \


####################################################################
####################### Module settings  ###########################
####################################################################

en_NZ.allophoneset = jar:/marytts/language/en_NZ/lexicon/allophones.en_NZ.xml
en_NZ.userdict = MARY_BASE/user-dictionaries/userdict-en_NZ.txt
en_NZ.lexicon = jar:/marytts/language/en_NZ/lexicon/en_NZ_lexicon.fst
en_NZ.lettertosound = jar:/marytts/language/en_NZ/lexicon/en_NZ.lts

en_NZ.pos.model = jar:/marytts/language/en/tagger/en-pos-maxent.bin
#en.pos.posMap = MARY_BASE/lib/modules/en/tagger/posMap.txt

en.prosody.paragraphdeclination = true

# rules for prediction of ToBI tones
en.prosody.tobipredparams = jar:/marytts/language/en/prosody/tobipredparams_english.xml
# rules for accent priorities of pos
en.prosody.accentPriorities = jar:/marytts/language/en/prosody/POSAccentPriorities.en.properties

# copy the word accents to the first accented syllable
en.prosody.syllableaccents = true


# Defines how many units should be selected in cart on backtrace
# The higher the number, the closer synthesis comes to pure unit selection 
en_NZ.cart.backtrace = 500 


# English feature processor manager
	
featuremanager.classes.list = \
	marytts.features.FeatureProcessorManager(en_NZ)
